Source: libpod
Section: admin
Priority: optional
Standards-Version: 4.6.2
Maintainer: Debian Go Packaging Team <pkg-go-maintainers@lists.alioth.debian.org>
Uploaders:
 Dmitry Smirnov <onlyjob@debian.org>,
 Reinhard Tartler <siretart@tauware.de>,
 Faidon Liambotis <paravoid@debian.org>,
Build-Depends:
 debhelper-compat (= 13),
 bash-completion,
 conmon,
 dh-golang,
 go-md2man,
 golang-go,
 libapparmor-dev,
 libbtrfs-dev,
 libdevmapper-dev,
 libglib2.0-dev,
 libsubid-dev,
Homepage: https://github.com/containers/podman
Vcs-Browser: https://salsa.debian.org/debian/libpod
Vcs-Git: https://salsa.debian.org/debian/libpod.git
XS-Go-Import-Path: github.com/containers/podman

Package: podman
Architecture: any
Built-Using:
 ${misc:Built-Using},
Depends:
 conmon,
 crun | runc,
 golang-github-containers-common,
 ${misc:Depends},
 ${shlibs:Depends},
Recommends:
 buildah (>= 1.31),
 catatonit | tini | dumb-init,
 dbus-user-session,
 passt,
 slirp4netns,
 uidmap,
 ${misc:Recommends},
Suggests:
 containers-storage,
 docker-compose,
 iptables,
 ${misc:Suggests},
Description: tool to manage containers and pods
 Podman (the POD MANager) is a tool for managing containers and images, volumes
 mounted into those containers, and pods made from groups of containers.
 .
 At a high level, the scope of Podman and libpod is the following:
  * Support for multiple container image formats, including OCI and Docker
    images.
  * Full management of those images, including pulling from various sources
    (including trust and verification), creating (built via Containerfile or
    Dockerfile or committed from a container), and pushing to registries and
    other storage backends.
  * Full management of container lifecycle, including creation (both from an
    image and from an exploded root filesystem), running, checkpointing and
    restoring (via CRIU), and removal.
  * Full management of container networking, using Netavark.
  * Support for pods, groups of containers that share resources and are managed
    together.
  * Support for running containers and pods without root or other elevated
    privileges.
  * Resource isolation of containers and pods.
  * Support for a Docker-compatible CLI interface, which can both run
    containers locally and on remote systems.
  * No manager daemon, for improved security and lower resource utilization at
    idle.
  * Support for a REST API providing both a Docker-compatible interface and an
    improved interface exposing advanced Podman functionality.
  * Support for running on Windows and Mac via virtual machines run by podman
    machine.
 .
 Podman is a daemon-less alternative to Docker.

Package: podman-docker
Architecture: any
Built-Using:
 ${misc:Built-Using},
Depends:
 podman,
 ${misc:Depends},
 ${shlibs:Depends},
Conflicts:
 docker.io,
 docker-ce-cli,
Recommends:
 docker-compose,
Description: tool to manage containers and pods (Docker CLI)
 Podman (the POD MANager) is a tool for managing containers and images, volumes
 mounted into those containers, and pods made from groups of containers.
 .
 At a high level, the scope of Podman and libpod is the following:
  * Support for multiple container image formats, including OCI and Docker
    images.
  * Full management of those images, including pulling from various sources
    (including trust and verification), creating (built via Containerfile or
    Dockerfile or committed from a container), and pushing to registries and
    other storage backends.
  * Full management of container lifecycle, including creation (both from an
    image and from an exploded root filesystem), running, checkpointing and
    restoring (via CRIU), and removal.
  * Full management of container networking, using Netavark.
  * Support for pods, groups of containers that share resources and are managed
    together.
  * Support for running containers and pods without root or other elevated
    privileges.
  * Resource isolation of containers and pods.
  * Support for a Docker-compatible CLI interface, which can both run
    containers locally and on remote systems.
  * No manager daemon, for improved security and lower resource utilization at
    idle.
  * Support for a REST API providing both a Docker-compatible interface and an
    improved interface exposing advanced Podman functionality.
  * Support for running on Windows and Mac via virtual machines run by podman
    machine.
 .
 Podman is a daemon-less alternative to Docker.
 .
 This package installs a Docker-compatible CLI interface, capable of running
 containers locally and on remote systems.

Package: podman-remote
Architecture: any
Built-Using:
 ${misc:Built-Using},
Depends:
 ${misc:Depends},
 ${shlibs:Depends},
Description: tool to manage containers and pods (remote CLI)
 Podman (the POD MANager) is a tool for managing containers and images, volumes
 mounted into those containers, and pods made from groups of containers.
 .
 At a high level, the scope of Podman and libpod is the following:
  * Support for multiple container image formats, including OCI and Docker
    images.
  * Full management of those images, including pulling from various sources
    (including trust and verification), creating (built via Containerfile or
    Dockerfile or committed from a container), and pushing to registries and
    other storage backends.
  * Full management of container lifecycle, including creation (both from an
    image and from an exploded root filesystem), running, checkpointing and
    restoring (via CRIU), and removal.
  * Full management of container networking, using Netavark.
  * Support for pods, groups of containers that share resources and are managed
    together.
  * Support for running containers and pods without root or other elevated
    privileges.
  * Resource isolation of containers and pods.
  * Support for a Docker-compatible CLI interface, which can both run
    containers locally and on remote systems.
  * No manager daemon, for improved security and lower resource utilization at
    idle.
  * Support for a REST API providing both a Docker-compatible interface and an
    improved interface exposing advanced Podman functionality.
  * Support for running on Windows and Mac via virtual machines run by podman
    machine.
 .
 Podman is a daemon-less alternative to Docker.
 .
 This package provides a smaller executable, a local client to interact with a
 Podman backend node through a RESTful API tunneled through an SSH connection.
